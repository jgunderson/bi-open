language: c

script:

#before_install:
  # Bootstrap
  - wget git.io/hikK5g -qO- | sudo bash
  - cd ..
  
  # Install xtuple-server
  - git clone https://github.com/xtuple/xtuple-server.git
  - cd xtuple-server
  - npm install
  - cd ..

  # The FOSS xtuple-server requires an existing xtuple directory to start working off of
  - git clone https://github.com/xtuple/xtuple.git --recursive
  - git clone https://github.com/jgunderson/xtuple-extensions.git

  # Install xtupl-extensions
  - sudo chmod -R 777 /usr/local/lib
  - n 0.8
  - cd xtuple-extensions
  - git submodule update --init --recursive --quiet
  - npm install --quiet
  - cd ..
  
  # Install xtuple.  Update npm first
  - npm update -g npm
  - cd xtuple
  - npm install --quiet
  - cd ..

  # Use the server to do an install.  Must be in xtuple folders?
  - cd xtuple
  - sudo xtuple-server install-dev --xt-demo --xt-adminpw admin
  - cd ..

  #install:

  # Install BI and perform ETL
  - cd bi-open/scripts
  - bash build_bi.sh -eblm -c ../../xtuple/node-datasource/config.js -d demo_dev -P admin
  - bash start_bi.sh
  - cd ../..

  # Install bi-open.
  - cd xtuple
  - ./scripts/build_app.js -d demo_dev -e ../xtuple-extensions/source/bi_open
  - cd ..

#before_script:
  # Start the app.
  - cd xtuple
  - npm start > console.log &
  - sleep 10
  - cd ..

#script:
  # Run a test to make sure that BI is accessible and the ETL worked
  - cd xtuple-extensions
  #- cat test/lib/sample_login_data.js | sed 's#org:.*#org: \"demo_dev\",#' > test/lib/login_data.js
  - cp ../xtuple/test/lib/login_data.js* test/lib/login_data.js
  - npm run-script test-bi-open

  #move to after-failure
  - cat test/lib/login_data.js
  - cat ../ErpBI/data-integration/properties/psg-linux/.kettle/kettle.properties
  - cat ../ErpBI/biserver-ce/tomcat/logs/catalina.out
  - cat ../xtuple/console.log
  
after_failure:
  - env